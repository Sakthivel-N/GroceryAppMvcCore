@model GroceryAppMvcCore.Models.JobView

@{
    ViewData["Title"] = "OurJobs";
    Layout = "~/Views/Shared/_EmployeeLayout.cshtml";
    int EmployeeId = Convert.ToInt32(ViewBag.Empid);
    int statuss = ViewBag.Status;
    int i = 0;


}

<h1 style="text-align:center;">OurJobs</h1>
<style>
    body {
        background: #f5f5f5;
        margin-top: 20px;
    }

    /* ===== Career ===== */
    .career-form {
        background-color: #4e63d7;
        border-radius: 5px;
        padding: 0 16px;
    }

        .career-form .form-control {
            background-color: rgba(255, 255, 255, 0.2);
            border: 0;
            padding: 12px 15px;
            color: #fff;
        }

            .career-form .form-control::-webkit-input-placeholder {
                /* Chrome/Opera/Safari */
                color: #fff;
            }

            .career-form .form-control::-moz-placeholder {
                /* Firefox 19+ */
                color: #fff;
            }

            .career-form .form-control:-ms-input-placeholder {
                /* IE 10+ */
                color: #fff;
            }

            .career-form .form-control:-moz-placeholder {
                /* Firefox 18- */
                color: #fff;
            }

        .career-form .custom-select {
            background-color: rgba(255, 255, 255, 0.2);
            border: 0;
            padding: 12px 15px;
            color: #fff;
            width: 100%;
            border-radius: 5px;
            text-align: left;
            height: auto;
            background-image: none;
        }

            .career-form .custom-select:focus {
                -webkit-box-shadow: none;
                box-shadow: none;
            }

        .career-form .select-container {
            position: relative;
        }

            .career-form .select-container:before {
                position: absolute;
                right: 15px;
                top: calc(50% - 14px);
                font-size: 18px;
                color: #ffffff;
                content: '\F2F9';
                font-family: "Material-Design-Iconic-Font";
            }

    .filter-result .job-box {
        -webkit-box-shadow: 0 0 35px 0 rgba(130, 130, 130, 0.2);
        box-shadow: 0 0 35px 0 rgba(130, 130, 130, 0.2);
        border-radius: 10px;
        padding: 10px 35px;
    }

    ul {
        list-style: none;
    }

    .list-disk li {
        list-style: none;
        margin-bottom: 12px;
    }

        .list-disk li:last-child {
            margin-bottom: 0;
        }

    .job-box .img-holder {
        height: 65px;
        width: 65px;
        background-color: #4e63d7;
        background-image: -webkit-gradient(linear, left top, right top, from(rgba(78, 99, 215, 0.9)), to(#5a85dd));
        background-image: linear-gradient(to right, rgba(78, 99, 215, 0.9) 0%, #5a85dd 100%);
        font-family: "Open Sans", sans-serif;
        color: #fff;
        font-size: 22px;
        font-weight: 700;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        border-radius: 65px;
    }

    .career-title {
        background-color: #4e63d7;
        color: #fff;
        padding: 15px;
        text-align: center;
        border-radius: 10px 10px 0 0;
        background-image: -webkit-gradient(linear, left top, right top, from(rgba(78, 99, 215, 0.9)), to(#5a85dd));
        background-image: linear-gradient(to right, rgba(78, 99, 215, 0.9) 0%, #5a85dd 100%);
    }

    .job-overview {
        -webkit-box-shadow: 0 0 35px 0 rgba(130, 130, 130, 0.2);
        box-shadow: 0 0 35px 0 rgba(130, 130, 130, 0.2);
        border-radius: 10px;
    }

    media (min-width: 992px) {
        .job-overview

    {
        position: -webkit-sticky;
        position: sticky;
        top: 70px;
    }

    }

    .job-overview .job-detail ul {
        margin-bottom: 28px;
    }

        .job-overview .job-detail ul li {
            opacity: 0.75;
            font-weight: 600;
            margin-bottom: 15px;
        }

            .job-overview .job-detail ul li i {
                font-size: 20px;
                position: relative;
                top: 1px;
            }

    .job-overview .overview-bottom,
    .job-overview .overview-top {
        padding: 35px;
    }

    .job-content ul li {
        font-weight: 600;
        opacity: 0.75;
        border-bottom: 1px solid #ccc;
        padding: 10px 5px;
    }

    media (min-width: 768px) {
        .job-content ul li

    {
        border-bottom: 0;
        padding: 0;
    }

    }

    .job-content ul li i {
        font-size: 20px;
        position: relative;
        top: 1px;
    }

    .mb-30 {
        margin-bottom: 30px;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/material-design-iconic-font/2.2.0/css/material-design-iconic-font.min.css" integrity="sha256-3sPp8BkKUE7QyPSl6VfBByBroQbKxKG7tsusY2mhbVY=" crossorigin="anonymous" />








@if (statuss == 0)
{
    var deliv = Model.deliveries.Where(m => m.EmployeeId == EmployeeId & m.Status == false);
    if (deliv != null)
    {
        <div class="container">


            <div class="row">
                <div class="col-lg-10 mx-auto">
                    <div class="career-search mb-60">



                        <div class="filter-result">
                            <p class="mb-30 ff-montserrat">Total Pending Jobs : @deliv.Count()</p>
                            @foreach (Delivery item1 in deliv)
                            {
                                Order order = Model.orders.FirstOrDefault(m => m.OrderId == item1.OrderId);
                                i++;


                                string[] list1 = (order.CartIdList.Split(","));
                                list1 = list1.Take(list1.Count() - 1).ToArray();
                                <div class="job-box d-md-flex align-items-center justify-content-between mb-30">
                                    <div class="job-left my-4 d-md-flex align-items-center flex-wrap">
                                        <div class="img-holder mr-md-4 mb-md-0 mb-4 mx-auto mx-md-0 d-md-none d-lg-flex">
                                            @i
                                        </div>

                                        <div class="job-content">
                                            <h5 class="text-center text-md-left">Order #:@order.OrderId</h5>
                                            <ul class="d-md-flex flex-wrap text-capitalize ff-open-sans">
                                                <li class="mr-md-4">
                                                    CartId
                                                    <div></div>
                                                </li>
                                                <li class="mr-md-4">
                                                    ProductId
                                                    <div></div>
                                                </li>
                                                <li class="mr-md-4">
                                                    PurchasedQty
                                                    <div></div>
                                                </li>
                                            </ul>

                                            @foreach (var cartid in list1)
                                            {
                                                Cart cart = Model.carts.FirstOrDefault(m => m.CartId == Convert.ToInt32(cartid));
                                                if (cart != null)
                                                {

                                                    <ul class="d-md-flex flex-wrap text-capitalize ff-open-sans">
                                                        <li class="mr-md-4">
                                                            @cart.CartId &emsp;&emsp;

                                                        </li>
                                                        <li class="mr-md-4">
                                                            @cart.ProductId &emsp;&emsp;&emsp;
                                                            <div></div>
                                                        </li>
                                                        <li class="mr-md-4">
                                                            @cart.PurchasedQty &emsp;&emsp;
                                                            <div></div>
                                                        </li>
                                                    </ul>

                                                }

                                            }
                                        </div>
                                    </div>
                                    <div class="job-right my-4 flex-shrink-0">
                                        <h5>Total Price : @order.TotalValue</h5>
                                        <a href=$"https://localhost:7284/Employees/Delivered?id =@item1.DeliveryId" style="color:white" class="btn d-block w-100 d-sm-inline-block btn-light bg-success">DeliveryNow</a>
                                    </div>
                                </div>








                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
}
else if (statuss == 1)
{
    var deliv = Model.deliveries.Where(m => m.EmployeeId == EmployeeId & m.Status == true);
    if (deliv != null)
    {
        foreach (Delivery item1 in deliv)
        {
            Order order = Model.orders.FirstOrDefault(m => m.OrderId == item1.OrderId);
            <h2>Order #:@order.OrderId</h2>

            string[] list1 = (order.CartIdList.Split(","));
            list1 = list1.Take(list1.Count() - 1).ToArray();
            <table>
                <tr>
                    <th>CartId</th>
                    <th>ProductId</th>
                    <th>PuchasedQty</th>
                </tr>



                @foreach (var cartid in list1)
                {
                    Cart cart = Model.carts.FirstOrDefault(m => m.CartId == Convert.ToInt32(cartid));
                    if (cart != null)
                    {
                        <tr>
                            <td>@cart.CartId</td>
                            <td>@cart.ProductId</td>
                            <td>@cart.PurchasedQty</td>
                        </tr>
                    }

                }

                <tr>
                    <td>Total Price : @order.TotalValue</td>
                </tr>




            </table>


        }
    }

}



